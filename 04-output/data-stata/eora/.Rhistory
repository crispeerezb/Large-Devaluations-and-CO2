# create variable that will adjust gross output to current prices
gdp_deflator <- gdp_deflator %>%
mutate(gdp_deflator_adj =  base_gdp_deflator/gdp_deflator)
View(gdp_deflator)
#########################
# Data for GDP deflator #
#########################
# packages
library(readxl)
library(dplyr)
library(writexl)
library(tidyr)
library(ggplot2)
library(haven)
# options
rm(list = ls())
options(encoding = "UTF-8")
options(digits = 10)
# Set working directory
username <- "CP"
if (username == "EZ") {
dir_base <- "change where you clone the repository"
} else if (username == "CP") {
dir_base <- "C:/Users/crist/OneDrive/Documentos/GitHub/Large-Devaluations-and-CO2"
}
dir_source <- file.path(dir_base, "01-raw-data")
wd <- file.path(dir_base, "02-code")
dir_temp <- file.path(dir_base, "03-temp")
dir_output <- file.path(dir_base, "04-output")
# load data
gdp_deflator <- read_excel(file.path(dir_source, "/World Bank/GDP Deflator.xlsx"), sheet = "Data")
View(gdp_deflator)
source("~/GitHub/Large-Devaluations-and-CO2/02-code/01-data-contruction/World Bank/02-gdp-deflator.R")
source("~/GitHub/Large-Devaluations-and-CO2/02-code/01-data-contruction/World Bank/02-gdp-deflator.R")
View(gdp_deflator)
# add code 3 digits
countries <- read_dta(file.path(dir_output, "data-stata/eora/00-countries.dta"))
View(countries)
######################
# Data for ppp rates #
######################
# packages
library(readxl)
library(dplyr)
library(writexl)
library(tidyr)
library(ggplot2)
library(haven)
# options
rm(list = ls())
options(encoding = "UTF-8")
options(digits = 16)
# Set working directory
username <- "CP"
if (username == "EZ") {
dir_base <- "change where you clone the repository"
} else if (username == "CP") {
dir_base <- "C:/Users/crist/OneDrive/Documentos/GitHub/Large-Devaluations-and-CO2"
}
dir_source <- file.path(dir_base, "01-raw-data")
wd <- file.path(dir_base, "02-code")
dir_temp <- file.path(dir_base, "03-temp")
dir_output <- file.path(dir_base, "04-output")
# load data
ppp_data <- read_excel(file.path(dir_source, "IMF data/ppp rate.xlsx"))
# reshape data
ppp_data <- ppp_data %>%
pivot_longer(cols = -c("country"), names_to = "Year", values_to = "ppp_rate")
# replace "no data" with NA
ppp_data$ppp_rate <- ifelse(ppp_data$ppp_rate == "no data", NA, ppp_data$ppp_rate)
# keep only the years 1990-2016
ppp_data <- ppp_data %>% filter(Year >= 1990 & Year <= 2009)
# drop some strange countries manually
ppp_data <- ppp_data %>% filter(country != "Belgium-Luxembourg")
ppp_data <- ppp_data %>% filter(country != "Eastern Germany")
ppp_data <- ppp_data %>% filter(country != "Czechoslovakia")
ppp_data <- ppp_data %>% filter(country != "Yemen, People's Dem. Rep. of")
ppp_data <- ppp_data %>% filter(country != "Yemen Arab Rep.")
ppp_data <- ppp_data %>% filter(country != "Netherlands Antilles")
# Change names manually to later match with our main data set
ppp_data$country <- gsub("Aruba the Netherlands", "Aruba", ppp_data$country)
ppp_data$country <- gsub("Afghanistan, Islamic Rep. of", "Afghanistan", ppp_data$country)
ppp_data$country <- gsub("Andorra, Principality of", "Andorra", ppp_data$country)
ppp_data$country <- gsub("Armenia, Rep. of", "Armenia", ppp_data$country)
ppp_data$country <- gsub("Aruba, Kingdom of the Netherlands", "Aruba", ppp_data$country)
ppp_data$country <- gsub("Azerbaijan, Rep. of", "Azerbaijan", ppp_data$country)
ppp_data$country <- gsub("Bahrain, Kingdom of", "Bahrain", ppp_data$country)
ppp_data$country <- gsub("Bahamas, The", "Bahamas", ppp_data$country)
ppp_data$country <- gsub("Belarus, Rep. of", "Belarus", ppp_data$country)
ppp_data$country <- gsub("Brunei Darussalam", "Brunei", ppp_data$country)
ppp_data$country <- gsub("Central African Rep.", "Central African Republic", ppp_data$country)
ppp_data$country <- gsub("Hong Kong SAR", "Hong Kong", ppp_data$country)
ppp_data$country <- gsub("China, P.R.: Macao", "Macao SAR", ppp_data$country)
ppp_data$country <- gsub("China, P.R.: Mainland", "China", ppp_data$country)
ppp_data$country <- gsub("Croatia, Rep. of", "Croatia", ppp_data$country)
ppp_data$country <- gsub("Czech Rep.", "Czech Republic", ppp_data$country)
ppp_data$country <- gsub("Ethiopia Federal Dem. Rep. of", "Ethiopia", ppp_data$country)
ppp_data$country <- gsub("Dominican Rep.", "Dominican Republic", ppp_data$country)
ppp_data$country <- gsub("Egypt, Arab Rep. of", "Egypt", ppp_data$country)
ppp_data$country <- gsub("Estonia, Rep. of", "Estonia", ppp_data$country)
ppp_data$country <- gsub("Fiji, Rep. of", "Fiji", ppp_data$country)
ppp_data$country <- gsub("Gambia, The", "Gambia", ppp_data$country)
ppp_data$country <- gsub("Iran, Islamic Rep. of", "Iran", ppp_data$country)
ppp_data$country <- gsub("Kazakhstan, Rep. of", "Kazakhstan", ppp_data$country)
ppp_data$country <- gsub("Korea", "South Korea", ppp_data$country)
ppp_data$country <- gsub("Kosovo, Rep. of", "Kosovo", ppp_data$country)
ppp_data$country <- gsub("Lao People's Dem. Rep.", "Laos", ppp_data$country)
ppp_data$country <- gsub("Russian Federation", "Russia", ppp_data$country)
ppp_data$country <- gsub("Poland, Rep. of", "Poland", ppp_data$country)
ppp_data$country <- gsub("San Marino, Rep. of", "San Marino", ppp_data$country)
ppp_data$country <- gsub("São Tomé and Príncipe, Dem. Rep. of", "Sao Tome and Principe", ppp_data$country)
ppp_data$country <- gsub("Serbia, Rep. of", "Serbia", ppp_data$country)
ppp_data$country <- gsub("Syrian Arab Rep.", "Syria", ppp_data$country)
ppp_data$country <- gsub("Taiwan Province of China", "Taiwan", ppp_data$country)
ppp_data$country <- gsub("Tajikistan, Rep. of", "Tajikistan", ppp_data$country)
ppp_data$country <- gsub("Tanzania, United Rep. of", "Tanzania", ppp_data$country)
ppp_data$country <- gsub("Türkiye, Rep of", "Turkey", ppp_data$country)
ppp_data$country <- gsub("Uzbekistan, Rep. of", "Uzbekistan", ppp_data$country)
ppp_data$country <- gsub("Venezuela, Rep. Bolivariana de", "Venezuela", ppp_data$country)
ppp_data$country <- gsub("Yemen, Rep. of", "Yemen", ppp_data$country)
ppp_data$country <- gsub("United Kingdom", "UK", ppp_data$country)
ppp_data$country <- gsub("United States", "USA", ppp_data$country)
ppp_data$country <- gsub("Vietnam", "Viet Nam", ppp_data$country)
ppp_data$country <- gsub("Eritrea State of", "Eritrea", ppp_data$country)
ppp_data$country <- gsub("Netherlands, The", "Netherlands", ppp_data$country)
ppp_data$country <- gsub("Slovak Rep.", "Slovakia", ppp_data$country)
ppp_data$country <- gsub("Slovenia, Rep. of", "Slovenia", ppp_data$country)
ppp_data$country <- gsub(", Rep. of", "", ppp_data$country)
ppp_data$country <- gsub(", Dem. Rep. of", "", ppp_data$country)
ppp_data$country <- gsub(", Islamic Rep. of", "", ppp_data$country)
ppp_data$country <- gsub(", Kingdom of", "", ppp_data$country)
ppp_data$country <- gsub(", The", "", ppp_data$country)
ppp_data$country <- gsub(", Federated States of", "", ppp_data$country)
ppp_data$country <- gsub(", Republic of" , "", ppp_data$country)
ppp_data$country <- gsub("Congo the", "Congo", ppp_data$country)
# other changes
ppp_data$country <- gsub("Ethiopia Federal Dem. Rep. of", "Ethiopia", ppp_data$country)
ppp_data$country <- gsub("United Arab Emirates", "Saudi Arabia", ppp_data$country)
ppp_data$country <- gsub("North Macedonia", "TFYR Macedonia", ppp_data$country)
ppp_data$country <- gsub("Antigua and Barbuda", "Antigua", ppp_data$country)
ppp_data$country <- gsub("Cabo Verde", "Cape Verde", ppp_data$country)
ppp_data$country <- gsub("Equatorial Guinea", "Guinea", ppp_data$country)
ppp_data$country <- gsub("Eritrea State of", "Eritrea", ppp_data$country)
ppp_data$country <- gsub("Kyrgyz Rep.", "Kyrgyzstan", ppp_data$country)
ppp_data$country <- gsub("Czech Republicblic", "Czech Republic", ppp_data$country)
ppp_data$country <- gsub("Central African Republicblic", "Central African Republic", ppp_data$country)
ppp_data$country <- gsub("Dominican Republicblic", "Dominican Republic", ppp_data$country)
ppp_data$country <- gsub("China, People's Republic of", "China", ppp_data$country)
# add code 3 digits
countries <- read_dta(file.path(dir_output, "data-stata/eora/00-countries.dta"))
# we drop some countries that are not relevant in this analysis
# Anguilla
ppp_data <- ppp_data %>% filter(country != "Anguilla")
# Comoros
ppp_data <- ppp_data %>% filter(country != "Comoros")
# Côte d'Ivoire
ppp_data <- ppp_data %>% filter(country != "Côte d'Ivoire")
# Curaçao and Sint Maarten
ppp_data <- ppp_data %>% filter(country != "Curaçao and Sint Maarten")
# Curaçao the Netherlands
ppp_data <- ppp_data %>% filter(country != "Curaçao the Netherlands")
# Dominica
ppp_data <- ppp_data %>% filter(country != "Dominica")
# Euro Area
ppp_data <- ppp_data %>% filter(country != "Euro Area")
# Eswatini
ppp_data <- ppp_data %>% filter(country != "Eswatini")
# USSR
ppp_data <- ppp_data %>% filter(country != "USSR")
# Yugoslavia
ppp_data <- ppp_data %>% filter(country != "Yugoslavia")
# Comoros
ppp_data <- ppp_data %>% filter(country != "Comoros")
# Faroe Islands
ppp_data <- ppp_data %>% filter(country != "Faroe Islands")
# Gibraltar
ppp_data <- ppp_data %>% filter(country != "Gibraltar")
# Grenada
ppp_data <- ppp_data %>% filter(country != "Grenada")
# Guadeloupe
ppp_data <- ppp_data %>% filter(country != "Guadeloupe")
# Guinea-Bissau
ppp_data <- ppp_data %>% filter(country != "Guinea-Bissau")
# Isle of Man
ppp_data <- ppp_data %>% filter(country != "Isle of Man")
# Jersey
ppp_data <- ppp_data %>% filter(country != "Jersey")
# Kiribati
ppp_data <- ppp_data %>% filter(country != "Kiribati")
# Kosovo
ppp_data <- ppp_data %>% filter(country != "Kosovo")
# Martinique
ppp_data <- ppp_data %>% filter(country != "Martinique")
# Micronesia
ppp_data <- ppp_data %>% filter(country != "Micronesia")
# Montserrat
ppp_data <- ppp_data %>% filter(country != "Montserrat")
# Nauru
ppp_data <- ppp_data %>% filter(country != "Nauru")
# Palau
ppp_data <- ppp_data %>% filter(country != "Palau")
# Reunion
ppp_data <- ppp_data %>% filter(country != "Reunion")
# Saint Pierre and Miquelon
ppp_data <- ppp_data %>% filter(country != "Saint Pierre and Miquelon")
# Sint Maarten the Netherlands
ppp_data <- ppp_data %>% filter(country != "Sint Maarten the Netherlands")
# Solomon Islands
ppp_data <- ppp_data %>% filter(country != "Solomon Islands")
# St. Kitts and Nevis
ppp_data <- ppp_data %>% filter(country != "St. Kitts and Nevis")
# St. Lucia
ppp_data <- ppp_data %>% filter(country != "St. Lucia")
# St. Vincent and the Grenadines
ppp_data <- ppp_data %>% filter(country != "St. Vincent and the Grenadines")
# Timor-Leste
ppp_data <- ppp_data %>% filter(country != "Timor-Leste")
# Tonga
ppp_data <- ppp_data %>% filter(country != "Tonga")
# Comoros, Union of the"
ppp_data <- ppp_data %>% filter(country != "Comoros, Union of the")
# Guernsey
ppp_data <- ppp_data %>% filter(country != "Guernsey")
# Guiana, French
ppp_data <- ppp_data %>% filter(country != "Guiana, French")
# left join
ppp_data <- ppp_data %>% left_join(countries, by = "country")
# check which countries did not match
aux <- ppp_data %>% filter(is.na(country_code))
aux <- unique(aux$country)
aux
colnames(ppp_data) <- c("country", "year", "ppp_rate", "country_code")
# proper format for variables, so year as string to merge later
ppp_data$year <- as.numeric(ppp_data$year)
ppp_data$ppp_rate <- as.numeric(ppp_data$ppp_rate)
# drop those observation that are in aux
ppp_data <- ppp_data %>% filter(!country %in% aux)
View(ppp_data)
#########################
# Data for GDP deflator #
#########################
# packages
library(readxl)
library(dplyr)
library(writexl)
library(tidyr)
library(ggplot2)
library(haven)
# options
rm(list = ls())
options(encoding = "UTF-8")
options(digits = 10)
# Set working directory
username <- "CP"
if (username == "EZ") {
dir_base <- "change where you clone the repository"
} else if (username == "CP") {
dir_base <- "C:/Users/crist/OneDrive/Documentos/GitHub/Large-Devaluations-and-CO2"
}
dir_source <- file.path(dir_base, "01-raw-data")
wd <- file.path(dir_base, "02-code")
dir_temp <- file.path(dir_base, "03-temp")
dir_output <- file.path(dir_base, "04-output")
# load data
gdp_deflator <- read_excel(file.path(dir_source, "/World Bank/GDP Deflator.xlsx"), sheet = "Data")
# drop columns Indicator Name and Indicator Code
gdp_deflator <- gdp_deflator %>% select(-c("Indicator Name", "Indicator Code"))
# reshape data to long format
gdp_deflator <- gdp_deflator %>%
pivot_longer(cols = -c("Country Name", "Country Code"), names_to = "Year", values_to = "GDP_Deflator")
# keep years from 1990 to 2019
gdp_deflator <- gdp_deflator %>% filter(Year >= 1990 & Year <= 2009)
# change column names
colnames(gdp_deflator) <- c("country", "country_code", "year", "gdp_deflator")
# just to match with my stata format
gdp_deflator$year <- as.numeric(gdp_deflator$year)
gdp_deflator$gdp_deflator <- as.numeric(gdp_deflator$gdp_deflator)
gdp_deflator$country_code <- as.character(gdp_deflator$country_code)
# drop column country because it is in spanish
gdp_deflator <- gdp_deflator %>% select(-c("country"))
# create a new variable for base gdp deflator
gdp_deflator <- gdp_deflator %>%
group_by(country_code) %>%
mutate(base_gdp_deflator = gdp_deflator[year == 2009])
# create variable that will adjust gross output to current prices
gdp_deflator <- gdp_deflator %>%
mutate(gdp_deflator_adj =  base_gdp_deflator/gdp_deflator)
View(gdp_deflator)
###################################
# Data for exchange rate deflator #
###################################
# packages
library(readxl)
library(dplyr)
library(writexl)
library(tidyr)
library(ggplot2)
library(haven)
# options
rm(list = ls())
options(encoding = "UTF-8")
options(digits = 16)
# Set working directory
username <- "CP"
if (username == "EZ") {
dir_base <- "change where you clone the repository"
} else if (username == "CP") {
dir_base <- "C:/Users/crist/OneDrive/Documentos/GitHub/Large-Devaluations-and-CO2"
}
dir_source <- file.path(dir_base, "01-raw-data")
wd <- file.path(dir_base, "02-code")
dir_temp <- file.path(dir_base, "03-temp")
dir_output <- file.path(dir_base, "04-output")
# load data
exchange_rate <- read_excel(file.path(dir_source, "IMF data/fx data.xlsx"), range = "A2:CH223")
# drop indicator column
exchange_rate <- exchange_rate %>% select(-c(Indicator))
# reshape data
exchange_rate <- exchange_rate %>%
pivot_longer(cols = -c("Country"), names_to = "Year", values_to = "exchange_rate")
# keep only the years 1990-2019
exchange_rate <- exchange_rate %>% filter(Year >= 1990 & Year <= 2019)
# drop some strange countries manually
exchange_rate <- exchange_rate %>% filter(Country != "Belgium-Luxembourg")
exchange_rate <- exchange_rate %>% filter(Country != "Eastern Germany")
exchange_rate <- exchange_rate %>% filter(Country != "Czechoslovakia")
exchange_rate <- exchange_rate %>% filter(Country != "Yemen, People's Dem. Rep. of")
exchange_rate <- exchange_rate %>% filter(Country != "Yemen Arab Rep.")
exchange_rate <- exchange_rate %>% filter(Country != "Netherlands Antilles")
# Change names manually to later match with our main data set
exchange_rate$Country <- gsub("Aruba the Netherlands", "Aruba", exchange_rate$Country)
exchange_rate$Country <- gsub("Afghanistan, Islamic Rep. of", "Afghanistan", exchange_rate$Country)
exchange_rate$Country <- gsub("Andorra, Principality of", "Andorra", exchange_rate$Country)
exchange_rate$Country <- gsub("Armenia, Rep. of", "Armenia", exchange_rate$Country)
exchange_rate$Country <- gsub("Aruba, Kingdom of the Netherlands", "Aruba", exchange_rate$Country)
exchange_rate$Country <- gsub("Azerbaijan, Rep. of", "Azerbaijan", exchange_rate$Country)
exchange_rate$Country <- gsub("Bahrain, Kingdom of", "Bahrain", exchange_rate$Country)
exchange_rate$Country <- gsub("Bahamas, The", "Bahamas", exchange_rate$Country)
exchange_rate$Country <- gsub("Belarus, Rep. of", "Belarus", exchange_rate$Country)
exchange_rate$Country <- gsub("Brunei Darussalam", "Brunei", exchange_rate$Country)
exchange_rate$Country <- gsub("Central African Rep.", "Central African Republic", exchange_rate$Country)
exchange_rate$Country <- gsub("China, P.R.: Hong Kong", "Hong Kong", exchange_rate$Country)
exchange_rate$Country <- gsub("China, P.R.: Macao", "Macao SAR", exchange_rate$Country)
exchange_rate$Country <- gsub("China, P.R.: Mainland", "China", exchange_rate$Country)
exchange_rate$Country <- gsub("Croatia, Rep. of", "Croatia", exchange_rate$Country)
exchange_rate$Country <- gsub("Czech Rep.", "Czech Republic", exchange_rate$Country)
exchange_rate$Country <- gsub("Ethiopia Federal Dem. Rep. of", "Ethiopia", exchange_rate$Country)
exchange_rate$Country <- gsub("Dominican Rep.", "Dominican Republic", exchange_rate$Country)
exchange_rate$Country <- gsub("Egypt, Arab Rep. of", "Egypt", exchange_rate$Country)
exchange_rate$Country <- gsub("Estonia, Rep. of", "Estonia", exchange_rate$Country)
exchange_rate$Country <- gsub("Fiji, Rep. of", "Fiji", exchange_rate$Country)
exchange_rate$Country <- gsub("Gambia, The", "Gambia", exchange_rate$Country)
exchange_rate$Country <- gsub("Iran, Islamic Rep. of", "Iran", exchange_rate$Country)
exchange_rate$Country <- gsub("Kazakhstan, Rep. of", "Kazakhstan", exchange_rate$Country)
exchange_rate$Country <- gsub("Korea, Rep. of", "South Korea", exchange_rate$Country)
exchange_rate$Country <- gsub("Kosovo, Rep. of", "Kosovo", exchange_rate$Country)
exchange_rate$Country <- gsub("Lao People's Dem. Rep.", "Laos", exchange_rate$Country)
exchange_rate$Country <- gsub("Russian Federation", "Russia", exchange_rate$Country)
exchange_rate$Country <- gsub("Poland, Rep. of", "Poland", exchange_rate$Country)
exchange_rate$Country <- gsub("San Marino, Rep. of", "San Marino", exchange_rate$Country)
exchange_rate$Country <- gsub("São Tomé and Príncipe, Dem. Rep. of", "Sao Tome and Principe", exchange_rate$Country)
exchange_rate$Country <- gsub("Serbia, Rep. of", "Serbia", exchange_rate$Country)
exchange_rate$Country <- gsub("Syrian Arab Rep.", "Syria", exchange_rate$Country)
exchange_rate$Country <- gsub("Taiwan Province of China", "Taiwan", exchange_rate$Country)
exchange_rate$Country <- gsub("Tajikistan, Rep. of", "Tajikistan", exchange_rate$Country)
exchange_rate$Country <- gsub("Tanzania, United Rep. of", "Tanzania", exchange_rate$Country)
exchange_rate$Country <- gsub("Türkiye, Rep of", "Turkey", exchange_rate$Country)
exchange_rate$Country <- gsub("Uzbekistan, Rep. of", "Uzbekistan", exchange_rate$Country)
exchange_rate$Country <- gsub("Venezuela, Rep. Bolivariana de", "Venezuela", exchange_rate$Country)
exchange_rate$Country <- gsub("Yemen, Rep. of", "Yemen", exchange_rate$Country)
exchange_rate$Country <- gsub("United Kingdom", "UK", exchange_rate$Country)
exchange_rate$Country <- gsub("United States", "USA", exchange_rate$Country)
exchange_rate$Country <- gsub("Vietnam", "Viet Nam", exchange_rate$Country)
exchange_rate$Country <- gsub("Eritrea State of", "Eritrea", exchange_rate$Country)
exchange_rate$Country <- gsub("Netherlands, The", "Netherlands", exchange_rate$Country)
exchange_rate$Country <- gsub("Slovak Rep.", "Slovakia", exchange_rate$Country)
exchange_rate$Country <- gsub("Slovenia, Rep. of", "Slovenia", exchange_rate$Country)
exchange_rate$Country <- gsub(", Rep. of", "", exchange_rate$Country)
exchange_rate$Country <- gsub(", Dem. Rep. of", "", exchange_rate$Country)
exchange_rate$Country <- gsub(", Islamic Rep. of", "", exchange_rate$Country)
exchange_rate$Country <- gsub(", Kingdom of", "", exchange_rate$Country)
exchange_rate$Country <- gsub(", The", "", exchange_rate$Country)
exchange_rate$Country <- gsub(", Federated States of", "", exchange_rate$Country)
exchange_rate$Country <- gsub(", Republic of" , "", exchange_rate$Country)
exchange_rate$Country <- gsub("Congo the", "Congo", exchange_rate$Country)
unique(exchange_rate$Country)
# we note that some european countries have no data from certain time. We need to add data to those countries and this come from "Euro Area".
# However, countries enter to the Euro Area at different times, so we change this manually.
# 1) first we identify the countries that are in the Euro Area and when they entered
euro_countries <- tibble(Country = c("Austria", "Belgium", "Cyprus", "Estonia", "Finland", "France",
"Germany", "Greece", "Ireland", "Italy", "Latvia", "Lithuania",
"Luxembourg", "Malta", "Netherlands", "Portugal", "Slovakia",
"Slovenia", "Spain"),
Euro_Adoption_Year = c(1999, 1999, 2008, 2011, 1999, 1999, 1999, 2001, 1999, 1999,
2014, 2015, 1999, 2008, 1999, 1999, 2009, 2007, 1999))
# 2) we add the information to when the countries entered the Euro Area
exchange_rate <- exchange_rate %>%
left_join(euro_countries, by = "Country")
# 3) we save exchange_rate for "Euro Area"
euro_area_data <- exchange_rate %>%
filter(Country == "Euro Area") %>%
select(-c(Euro_Adoption_Year)) %>% na.omit()
# 4) we add a new column in exchange_rate to identify the countries that are in the Euro Area
exchange_rate <- exchange_rate %>%
mutate(Euro_Area = ifelse(Country %in% euro_countries$Country, "Euro Area", NA))
# 5) left join the data for the Euro Area
exchange_rate <- exchange_rate %>%
left_join(euro_area_data, by = c("Euro_Area" = "Country", "Year"))
# 6) create the final exchange_rate variable
exchange_rate$exchange_rate <- ifelse(exchange_rate$Euro_Area == "Euro Area" & exchange_rate$Year >= exchange_rate$Euro_Adoption_Year & is.na(exchange_rate$exchange_rate.x),
exchange_rate$exchange_rate.y, exchange_rate$exchange_rate.x)
exchange_rate <- exchange_rate %>% select(-c("exchange_rate.x", "exchange_rate.y", "Euro_Area", "Euro_Adoption_Year"))
exchange_rate$exchange_rate <- as.numeric(exchange_rate$exchange_rate)
exchange_rate$Year <- as.numeric(exchange_rate$Year)
colnames(exchange_rate) <- c("country", "year", "exchange_rate")
# other changes
exchange_rate$country <- gsub("Ethiopia Federal Dem. Rep. of", "Ethiopia", exchange_rate$country)
exchange_rate$country <- gsub("United Arab Emirates", "Saudi Arabia", exchange_rate$country)
exchange_rate$country <- gsub("North Macedonia", "TFYR Macedonia", exchange_rate$country)
exchange_rate$country <- gsub("Antigua and Barbuda", "Antigua", exchange_rate$country)
exchange_rate$country <- gsub("Cabo Verde", "Cape Verde", exchange_rate$country)
exchange_rate$country <- gsub("Equatorial Guinea", "Guinea", exchange_rate$country)
exchange_rate$country <- gsub("Eritrea State of", "Eritrea", exchange_rate$country)
exchange_rate$country <- gsub("Kyrgyz Rep.", "Kyrgyzstan", exchange_rate$country)
# add code 3 digits
countries <- read_dta(file.path(dir_output, "data-stata/eora/00-countries.dta"))
# we drop some countries that are not relevant in this analysis
# Anguilla
exchange_rate <- exchange_rate %>% filter(country != "Anguilla")
# Comoros
exchange_rate <- exchange_rate %>% filter(country != "Comoros")
# Côte d'Ivoire
exchange_rate <- exchange_rate %>% filter(country != "Côte d'Ivoire")
# Curaçao and Sint Maarten
exchange_rate <- exchange_rate %>% filter(country != "Curaçao and Sint Maarten")
# Curaçao the Netherlands
exchange_rate <- exchange_rate %>% filter(country != "Curaçao the Netherlands")
# Dominica
exchange_rate <- exchange_rate %>% filter(country != "Dominica")
# Euro Area
exchange_rate <- exchange_rate %>% filter(country != "Euro Area")
# Eswatini
exchange_rate <- exchange_rate %>% filter(country != "Eswatini")
# USSR
exchange_rate <- exchange_rate %>% filter(country != "USSR")
# Yugoslavia
exchange_rate <- exchange_rate %>% filter(country != "Yugoslavia")
# Comoros
exchange_rate <- exchange_rate %>% filter(country != "Comoros")
# Faroe Islands
exchange_rate <- exchange_rate %>% filter(country != "Faroe Islands")
# Gibraltar
exchange_rate <- exchange_rate %>% filter(country != "Gibraltar")
# Grenada
exchange_rate <- exchange_rate %>% filter(country != "Grenada")
# Guadeloupe
exchange_rate <- exchange_rate %>% filter(country != "Guadeloupe")
# Guinea-Bissau
exchange_rate <- exchange_rate %>% filter(country != "Guinea-Bissau")
# Isle of Man
exchange_rate <- exchange_rate %>% filter(country != "Isle of Man")
# Jersey
exchange_rate <- exchange_rate %>% filter(country != "Jersey")
# Kiribati
exchange_rate <- exchange_rate %>% filter(country != "Kiribati")
# Kosovo
exchange_rate <- exchange_rate %>% filter(country != "Kosovo")
# Martinique
exchange_rate <- exchange_rate %>% filter(country != "Martinique")
# Micronesia
exchange_rate <- exchange_rate %>% filter(country != "Micronesia")
# Montserrat
exchange_rate <- exchange_rate %>% filter(country != "Montserrat")
# Nauru
exchange_rate <- exchange_rate %>% filter(country != "Nauru")
# Palau
exchange_rate <- exchange_rate %>% filter(country != "Palau")
# Reunion
exchange_rate <- exchange_rate %>% filter(country != "Reunion")
# Saint Pierre and Miquelon
exchange_rate <- exchange_rate %>% filter(country != "Saint Pierre and Miquelon")
# Sint Maarten the Netherlands
exchange_rate <- exchange_rate %>% filter(country != "Sint Maarten the Netherlands")
# Solomon Islands
exchange_rate <- exchange_rate %>% filter(country != "Solomon Islands")
# St. Kitts and Nevis
exchange_rate <- exchange_rate %>% filter(country != "St. Kitts and Nevis")
# St. Lucia
exchange_rate <- exchange_rate %>% filter(country != "St. Lucia")
# St. Vincent and the Grenadines
exchange_rate <- exchange_rate %>% filter(country != "St. Vincent and the Grenadines")
# Timor-Leste
exchange_rate <- exchange_rate %>% filter(country != "Timor-Leste")
# Tonga
exchange_rate <- exchange_rate %>% filter(country != "Tonga")
# Comoros, Union of the"
exchange_rate <- exchange_rate %>% filter(country != "Comoros, Union of the")
# Guernsey
exchange_rate <- exchange_rate %>% filter(country != "Guernsey")
# Guiana, French
exchange_rate <- exchange_rate %>% filter(country != "Guiana, French")
# left join
exchange_rate <- exchange_rate %>% left_join(countries, by = "country")
# check which countries did not match
aux <- exchange_rate %>% filter(is.na(country_code))
aux <- unique(aux$country)
aux
View(exchange_rate)
View(exchange_rate)
source("~/GitHub/Large-Devaluations-and-CO2/02-code/01-data-contruction/imf data/02-ppp-rates.R")
source("~/GitHub/Large-Devaluations-and-CO2/02-code/01-data-contruction/imf data/01-exchange-rate-data.R")
View(exchange_rate)
